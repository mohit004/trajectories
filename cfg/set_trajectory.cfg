#!/usr/bin/env python

PACKAGE = "trajectories"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

#       	Name		Type      	Level	Description				Default 	Min	Max

gen.add(	"traj_start",	bool_t,		0,	"Trajectory start flag", 		False)
gen.add(	"max_z_start",	bool_t,		0,	"Set z refrence start at max_z",	False)
gen.add(	"climb",	bool_t,		0,	"Climb to max_z", 			False)
gen.add(	"land",		bool_t,		0,	"Land to ground", 			False)
gen.add(	"change_z",	bool_t,		0,	"Change in height flag", 		False)
gen.add("pub_on_setpoint_position",bool_t,	0,	"Publish flag on /mavros/setpoint_position/local", False)

trajectory_enum = gen.enum([ 	gen.const("hover_origin", int_t, 0, "Hover Trajectory (at origin)"),
				gen.const("hover",        int_t, 1, "Hover Trajectory"),
                       		gen.const("circle",       int_t, 2, "Circle Trajectory"),
                       		gen.const("figure_8",     int_t, 3, "Figure 8 Trajectory"),
				gen.const("circle_ground",int_t, 4, "Circle ground Trajectory"),
				gen.const("square",	  int_t, 5, "Square Trajectory"),],
                     		"An enum to set flight trajectory")
gen.add(	"traj_type", 		int_t, 		0, 	"Trajectory type", 		0, 		0, 	5, edit_method=trajectory_enum)

gen.add( 	"pos_pub_delay",	  int_t, 	0, 	"Delay in position publisher",          40, 	0, 	200)

gen.add( 	"max_z",		double_t, 	0, 	"Max height [m]",  		   1.8, 		0, 	2.5)
gen.add( 	"x_des",		double_t, 	0, 	"Desired X position [m]",  		0, 	-2.0, 	2.0)
gen.add( 	"y_des",		double_t, 	0, 	"Desired Y position [m]",  		0, 	-2.0, 	2.0)
gen.add( 	"z_des",		double_t, 	0, 	"Desired Z position [m]",  		0, 	-1.0, 	1.0)
gen.add( 	"del_z",		double_t, 	0, 	"Change in height [m]",  	   0.3, 		0, 	1.0)
gen.add( 	"des_radius",		double_t, 	0, 	"Radius of Circle [m]",  	   1.0, 		0.1, 	1.5)
gen.add( 	"des_velocity",		double_t, 	0, 	"Absolute Velocity of Circle [m/s]",  0.5, 		0.1, 	1.5)

gen.add( 	"climb_rate",		double_t, 	0, 	"Climbing rate",  		   0.4, 		0.1, 	0.6)
gen.add( 	"land_rate",		double_t, 	0, 	"Landing rate",  		   0.4, 		0.1, 	0.6)


exit(gen.generate(PACKAGE, "trajectory", "set_trajectory"))
